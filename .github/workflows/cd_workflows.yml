name: CD Workflows

on:
  push:
    branches:
      - 'develop'

permissions: write-all

jobs:
########  CI process ########
  ci-process:
    uses: ./.github/workflows/ci_workflows.yml

######## CD process ########
  cd-process:
    needs:
      - ci-process
    if:
      contains('refs/heads/develop', github.ref)
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: nguyencaohieu26
      IMAGE_NAME: cd-test
      IMAGE_TAG: ${{ github.run_number }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '17'
          cache: maven

      - name: Build file jar
        run:  mvn install

      - name: Build Docker Image
        run: |
          docker build  --tag $DOCKER_REPOSITORY/$IMAGE_NAME:v$IMAGE_TAG --no-cache .
          docker build  --tag $DOCKER_REPOSITORY/$IMAGE_NAME:latest --no-cache .


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:v${{ env.IMAGE_TAG }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_REPOSITORY_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_REPOSITORY_USERNAME }} --password-stdin

      - name: Push Image to Docker Hub
        run: |
          docker push $DOCKER_REPOSITORY/$IMAGE_NAME:v$IMAGE_TAG
          docker push $DOCKER_REPOSITORY/$IMAGE_NAME:latest

